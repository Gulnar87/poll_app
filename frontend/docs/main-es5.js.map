{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/pages/chart/chart.component.ts","webpack:///src/app/pages/pages.component.ts","webpack:///src/app/pages/poll/poll.component.ts","webpack:///src/app/pages/voting/voting.component.ts","webpack:///src/app/service.ts/data.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///src/app/app.component.css","webpack:///src/app/header/header.component.css","webpack:///src/app/pages/chart/chart.component.css","webpack:///src/app/pages/pages.component.css","webpack:///src/app/pages/poll/poll.component.css","webpack:///src/app/pages/voting/voting.component.css","webpack:///src/app/app.component.html","webpack:///src/app/header/header.component.html","webpack:///src/app/pages/chart/chart.component.html","webpack:///src/app/pages/pages.component.html","webpack:///src/app/pages/poll/poll.component.html","webpack:///src/app/pages/voting/voting.component.html"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","routes","path","component","PagesComponent","AppRoutingModule","NgModule","imports","RouterModule","AppComponent","title","Component","selector","template","FusionChartsModule","AppModule","declarations","HeaderComponent","PollComponent","VotingComponent","ChartComponent","BrowserModule","FormsModule","ReactiveFormsModule","MatRadioModule","MatButtonModule","MatFormFieldModule","MatCardModule","BrowserAnimationsModule","providers","DataService","bootstrap","data","subscription","currentMessage","subscribe","poll","question","answers","console","log","initializeVottingGraph","chartData","forEach","el","push","label","answer","value","voteCount","dataSource","chart","caption","captionFontColor","paletteColors","theme","Input","PollData","Answer","sum","fb","shareData","EventEmitter","initializeFormGroup","pollForm","group","Validators","array","map","get","changeMessage","index","controls","createAnswer","length","removeAt","updateAnswer","reset","updateQuestion","FormBuilder","Output","vote","messageSource","BehaviorSubject","asObservable","next","Injectable","environment","production","enableProdMode","platformBrowserDynamic","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { PagesComponent } from \"./pages/pages.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: PagesComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { HeaderComponent } from \"./header/header.component\";\nimport { PollComponent } from \"./pages/poll/poll.component\";\nimport { VotingComponent } from \"./pages/voting/voting.component\";\nimport { PagesComponent } from \"./pages/pages.component\";\nimport { ChartComponent } from \"./pages/chart/chart.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { DataService } from \"./service.ts/data.service\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { MatRadioModule } from \"@angular/material/radio\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatCardModule } from \"@angular/material/card\";\n\nimport { FusionChartsModule } from \"angular-fusioncharts\";\n\n// Import FusionCharts library and chart modules\nimport * as FusionCharts from \"fusioncharts\";\nimport * as charts from \"fusioncharts/fusioncharts.charts\";\nimport * as FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\n\n// Pass the fusioncharts library and chart modules\nFusionChartsModule.fcRoot(FusionCharts, charts, FusionTheme);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    PollComponent,\n    VotingComponent,\n    PagesComponent,\n    ChartComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatRadioModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    FusionChartsModule,\n    MatCardModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { DataService } from \"src/app/service.ts/data.service\";\nimport { PollData } from \"../poll/poll.component\";\n\n@Component({\n  selector: \"app-chart\",\n  templateUrl: \"./chart.component.html\",\n  styleUrls: [\"./chart.component.css\"],\n})\nexport class ChartComponent implements OnInit {\n  @Input() poll: PollData;\n\n  subscription: Subscription;\n\n  dataSource;\n\n  sum: number;\n\n  constructor(private data: DataService) {}\n\n  ngOnInit() {\n    this.subscription = this.data.currentMessage.subscribe((data) => {\n      if (data) {\n        this.poll.question = data.question;\n        this.poll.answers = data.answers;\n      }\n\n      console.log(data, \"voting com\");\n\n      this.initializeVottingGraph();\n    });\n  }\n\n  initializeVottingGraph() {\n    const chartData = [];\n    this.poll.answers.forEach((el) => {\n      chartData.push({ label: el.answer, value: el.voteCount });\n      return chartData;\n    });\n\n    this.dataSource = {\n      chart: {\n        caption: this.poll.question,\n        captionFontColor: \"#1f448a\",\n        paletteColors: \"3f51b5\",\n        // xaxisname: \"\",\n        // yaxisname: \"\",\n        // numbersuffix: \"K\",\n        theme: \"gammel\",\n      },\n\n      data: chartData,\n    };\n  }\n}\n","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { DataService } from \"../service.ts/data.service\";\nimport { PollData } from \"./poll/poll.component\";\n\n@Component({\n  selector: \"app-pages\",\n  templateUrl: \"./pages.component.html\",\n  styleUrls: [\"./pages.component.css\"],\n})\nexport class PagesComponent implements OnInit {\n  subscription: Subscription;\n\n  public poll: PollData = new PollData(\n    \"What is the value \\u03C0 ?\",\n    [\n      { answer: \"3.14\", voteCount: 4 },\n      { answer: \"3.1416\", voteCount: 3 },\n      { answer: \"3.14159264\", voteCount: 4 },\n    ],\n    11\n  );\n\n  constructor(private data: DataService) {}\n\n  ngOnInit() {}\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n} from \"@angular/core\";\nimport { FormArray, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { DataService } from \"src/app/service.ts/data.service\";\n\nexport class Answer {\n  // public voteCount?: number = 0;\n  constructor(public answer: string, public voteCount: number) {}\n}\n\nexport class PollData {\n  constructor(\n    public question: string,\n    public answers: Answer[],\n    public sum: number\n  ) {}\n}\n@Component({\n  selector: \"app-poll\",\n  templateUrl: \"./poll.component.html\",\n  styleUrls: [\"./poll.component.css\"],\n})\nexport class PollComponent implements OnInit {\n  public pollForm: FormGroup;\n\n  public answers: Answer[];\n\n  @Input() poll: PollData;\n\n  @Output() shareData: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private fb: FormBuilder, private data: DataService) {}\n\n  ngOnInit() {\n    this.initializeFormGroup();\n\n    // this.pollForm.controls[\"question\"].disable();\n    // this.pollForm.controls[\"question\"].hasError(\"maxlength\");\n  }\n\n  initializeFormGroup(): void {\n    this.pollForm = this.fb.group({\n      question: [this.poll.question, Validators.maxLength(80)],\n      answers: this.fb.array(\n        // this.poll.answers && this.poll.answers.length > 0\n        // ?\n        [\n          ...this.poll.answers.map((el) =>\n            this.fb.group({\n              voteCount: el.voteCount,\n              answer: [\n                el.answer,\n                Validators.compose([Validators.maxLength(80)]),\n              ],\n            })\n          ),\n        ]\n        // : [\n        //     ...[new Answer(undefined, 0)].map((el) =>\n        //       this.fb.group({\n        //         voteCount: el.voteCount,\n        //         answer: [el.answer, Validators.maxLength(80)],\n        //       })\n        //     ),\n        //   ]\n      ),\n    });\n\n    // if (this.pollForm.controls[\"question\"].hasError(\"maxlength\")) {\n    //   this.pollForm.controls[\"question\"].disable();\n    // this.pollForm.get('endDate').disable();\n    // }\n  }\n\n  updateQuestion() {\n    this.poll.question = this.pollForm.get(\"question\").value;\n\n    this.data.changeMessage(this.poll);\n  }\n\n  updateAnswer() {\n    this.poll.answers = this.pollForm.get(\"answers\").value;\n\n    this.poll.answers.map((el) => {\n      if (el.answer === \"\") {\n        el.voteCount = null;\n      }\n    });\n\n    this.data.changeMessage(this.poll);\n  }\n\n  get answersForms() {\n    return this.pollForm.get(\"answers\") as FormArray;\n  }\n\n  getAnswersFormGroup(index): FormGroup {\n    return (this.pollForm.get(\"answers\") as FormArray).controls[\n      index\n    ] as FormGroup;\n  }\n\n  createAnswer(): FormGroup {\n    return this.fb.group({\n      answer: [\"\", Validators.maxLength(80)],\n      voteCount: 0,\n    });\n  }\n\n  onAddAnswer(): void {\n    (this.pollForm.get(\"answers\") as FormArray).push(this.createAnswer());\n  }\n\n  onRemoveAnswer(index) {\n    if ((this.pollForm.get(\"answers\") as FormArray).length > 2) {\n      (this.pollForm.get(\"answers\") as FormArray).removeAt(index);\n\n      this.updateAnswer();\n    }\n  }\n\n  resetForm() {\n    this.pollForm.reset({\n      question: \"What is the value \\u03C0 ?\",\n      answers: [\n        { answer: \"3.14\", voteCount: 4 },\n        { answer: \"3.1416\", voteCount: 3 },\n        { answer: \"3.14159264\", voteCount: 4 },\n      ],\n      sum: 11,\n    });\n\n    this.updateQuestion();\n    this.updateAnswer();\n  }\n}\n","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { DataService } from \"src/app/service.ts/data.service\";\nimport { PollData } from \"../poll/poll.component\";\n\n@Component({\n  selector: \"app-voting\",\n  templateUrl: \"./voting.component.html\",\n  styleUrls: [\"./voting.component.css\"],\n})\nexport class VotingComponent implements OnInit {\n  @Input() poll: PollData;\n  // = {\n  //   question: \"What is the value of p?\",\n  //   answers: [{ answer: \"1\" }, { answer: \"2\" }, { answer: \"3\" }],\n  // };\n\n  vote;\n\n  subscription: Subscription;\n\n  constructor(private data: DataService) {}\n\n  ngOnInit() {\n    this.subscription = this.data.currentMessage.subscribe((data) => {\n      if (data) {\n        this.poll.question = data.question;\n        this.poll.answers = data.answers;\n        // console.log(data, \"voting com\");\n      }\n    });\n  }\n\n  voteForAnswer(vote) {\n    vote.voteCount += 1;\n    this.poll.sum += 1;\n    this.data.changeMessage(this.poll);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { PollData } from \"../pages/poll/poll.component\";\n\n@Injectable()\nexport class DataService {\n  private messageSource = new BehaviorSubject<PollData>(null);\n  currentMessage = this.messageSource.asObservable();\n\n  constructor() {}\n\n  changeMessage(data: PollData) {\n    this.messageSource.next(data);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJoZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjaGFydC5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYWdlcy5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwb2xsLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ2b3RpbmcuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<app-header></app-header>\\n\\n<router-outlet></router-outlet>\\n\";","export default \"<header>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <h1 class=\\\"p-5\\\">Sir Vote-a-lot</h1>\\n    </div>\\n    <hr />\\n  </div>\\n</header>\\n\";","export default \"<fusioncharts\\n  width=\\\"500\\\"\\n  height=\\\"400\\\"\\n  type=\\\"column2d\\\"\\n  [dataSource]=\\\"dataSource\\\"\\n>\\n</fusioncharts>\\n\\n<div>Total vote: {{ poll.sum }}</div>\\n\";","export default \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row mx-4\\\">\\n    <div class=\\\"col-4\\\">\\n      <app-poll [poll]=\\\"poll\\\"></app-poll>\\n    </div>\\n    <div class=\\\"col-4\\\">\\n      <app-voting [poll]=\\\"poll\\\"></app-voting>\\n    </div>\\n    <div class=\\\"col-4\\\">\\n      <app-chart [poll]=\\\"poll\\\"></app-chart>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<mat-card>\\n  <mat-card-content>\\n    <form [formGroup]=\\\"pollForm\\\" id=\\\"pollForm\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-9\\\">\\n          <input\\n            formControlName=\\\"question\\\"\\n            id=\\\"question\\\"\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            (keyup)=\\\"updateQuestion()\\\"\\n            maxlength=\\\"81\\\"\\n          />\\n\\n          <mat-error\\n            class=\\\"px-1\\\"\\n            *ngIf=\\\"pollForm.controls['question'].hasError('maxlength')\\\"\\n          >\\n            Max 80 characters are allowed\\n          </mat-error>\\n        </div>\\n        <div class=\\\"col-12\\\">\\n          <div\\n            formArrayName=\\\"answers\\\"\\n            *ngFor=\\\"let item of answersForms.controls; let i = index\\\"\\n            class=\\\"mb-2 mt-2\\\"\\n          >\\n            <div class=\\\"row\\\" [formGroupName]=\\\"i\\\">\\n              <div class=\\\"col-9 mt-3 d-flex align-items-center\\\">\\n                <input\\n                  formControlName=\\\"answer\\\"\\n                  matInput\\n                  placeholder=\\\"Type an answer {{ i + 1 }}\\\"\\n                  class=\\\"form-control\\\"\\n                  (keyup)=\\\"updateAnswer()\\\"\\n                  maxlength=\\\"81\\\"\\n                />\\n              </div>\\n\\n              <mat-error\\n                *ngIf=\\\"\\n                  getAnswersFormGroup(i).controls['answer'].hasError(\\n                    'maxlength'\\n                  )\\n                \\\"\\n              >\\n                Max 80 characters are allowed\\n              </mat-error>\\n\\n              <div\\n                class=\\\"\\n                  col-md-2 col-12\\n                  action-buttons\\n                  d-flex\\n                  align-items-center\\n                  mt-3\\n                \\\"\\n              >\\n                <button\\n                  class=\\\"btn btn-outline-secondary m-1\\\"\\n                  (click)=\\\"onRemoveAnswer(i)\\\"\\n                >\\n                  <i class=\\\"fa fa-times\\\"></i>\\n                </button>\\n                <button\\n                  *ngIf=\\\"\\n                    answersForms.length === i + 1 && answersForms.length <= 9\\n                  \\\"\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-outline-secondary\\\"\\n                  (click)=\\\"onAddAnswer()\\\"\\n                >\\n                  Add\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-12 d-flex justify-content-between mt-5\\\">\\n          <div>\\n            <span>{{ poll.answers.length }}</span\\n            >/10 possible answers\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-outline-secondary\\\"\\n            (click)=\\\"resetForm()\\\"\\n          >\\n            Reset\\n          </button>\\n        </div>\\n      </div>\\n    </form>\\n  </mat-card-content>\\n</mat-card>\\n\";","export default \"<mat-card>\\n  <mat-card-content>\\n    <div class=\\\"row\\\">\\n      <h2>\\n        {{ poll.question }}\\n      </h2>\\n\\n      <mat-radio-group [(ngModel)]=\\\"vote\\\" name=\\\"vote\\\">\\n        <div *ngFor=\\\"let answer of poll.answers\\\">\\n          <mat-radio-button\\n            *ngIf=\\\"answer.answer\\\"\\n            class=\\\"col-12 p-3\\\"\\n            [value]=\\\"answer\\\"\\n            color=\\\"primary\\\"\\n          >\\n            {{ answer.answer }}\\n          </mat-radio-button>\\n        </div>\\n      </mat-radio-group>\\n\\n      <div class=\\\"col-12 d-flex justify-content-end mt-5\\\">\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-outline-secondary\\\"\\n          (click)=\\\"voteForAnswer(vote)\\\"\\n        >\\n          Vote\\n        </button>\\n      </div>\\n    </div>\\n  </mat-card-content>\\n</mat-card>\\n\";"]}